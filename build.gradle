// 声明gradle构建脚本自身使用的依赖资源
buildscript {

    // 仓库
    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://repo.spring.io/libs-milestone/" }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
        jcenter()
    }

    // 依赖jar
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath 'io.spring.gradle:dependency-management-plugin:1.0.9.RELEASE' //版本依赖管理插件
    }
}
apply from: 'version.gradle'

// 所有项目配置声明
allprojects {
    // 项目版本
    group "${projectGroup}"
    version "${projectVersion}"

    // 引入插件
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    // Java版本
    sourceCompatibility = "${SOURCE_COMPILER_LEVEL}"  // 编译版本
    targetCompatibility = "${SOURCE_COMPILER_LEVEL}"   // 执行版本

    repositories {
        maven { url "http://maven.aliyun.com/nexus/content/groups/public/" }
        maven { url "https://oss.sonatype.org/content/groups/public/" }
        mavenCentral()
        jcenter()
    }

    dependencies {
        testCompile "org.springframework.boot:spring-boot-starter-test"
      //  compile "org.springframework.boot:spring-boot-starter-parent:2.0.2.RELEASE"
        compile "org.springframework.boot:spring-boot-starter-web"
        testCompile 'junit:junit:4.12'
    }

    // 版本依赖管理
    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
            mavenBom "com.alibaba.cloud:spring-cloud-alibaba-dependencies:${springCloudAlibabaVersion}"
        }
    }

    //在多模块下，不然编译失败，因为不会把依赖模块给打包。https://zhuanlan.zhihu.com/p/36102184
    jar { enabled = true }
    bootJar { enabled = false }
}



